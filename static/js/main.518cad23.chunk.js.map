{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORTED_BY_ALPH","SORTED_BY_LENGTH","App","useState","sortField","setSortField","isReverse","setIsReverse","visibleGoods","goods","reverse","preparedGoods","sort","good1","good2","length","localeCompare","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,OACjBC,EAAmB,SA2BlB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA7BR,SAA0BC,EAAOL,EAAWM,GAC1C,IAAMC,EAAa,YAAOF,GAiB1B,OAfIL,GACFO,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQV,GACN,KAAKH,EACH,OAAOY,EAAME,OAASD,EAAMC,OAE9B,KAAKf,EACH,OAAOa,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAKXJ,EACKC,EAAcD,UAGhBC,EAOcM,CAAiBlB,EAAiBK,EAAWE,GAElE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYhB,IAAcJ,IAEhCqB,QAAS,kBAAMhB,EAAaL,IAR9B,iCAaA,wBACEmB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYhB,IAAcH,IAGhCoB,QAAS,kBAAMhB,EAAaJ,IAT9B,4BAcA,wBACEkB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAad,IAGnBe,QAAS,kBAAMd,GAAcD,IAT/B,sBAcEF,GAAaE,IACb,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPhB,EAAa,IAAKE,GAAa,IAJnC,sBAYJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC7GjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.518cad23.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORTED_BY_ALPH = 'ALPH';\nconst SORTED_BY_LENGTH = 'LENGTH';\n\nfunction getPreparedGoods(goods, sortField, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORTED_BY_LENGTH:\n          return good1.length - good2.length;\n\n        case SORTED_BY_ALPH:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortField, isReverse);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortField !== SORTED_BY_ALPH },\n            )}\n          onClick={() => setSortField(SORTED_BY_ALPH)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortField !== SORTED_BY_LENGTH },\n            )\n          }\n          onClick={() => setSortField(SORTED_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !isReverse },\n            )\n          }\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setSortField(''); setIsReverse(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}